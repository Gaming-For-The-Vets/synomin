.\" Text automatically generated by txt2man
.TH ipkg  "Apr/20/2016" "opkg 0.2.4" ""
.SH NAME
\fBipkg \fP- manage community packages provided for synology disc station
.SH SYNOPSIS
.nf
.fam C
\fBipkg\fP [\fB-option\fP] \fICOMMAND\fP [pkgname|file|glob]
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
The \fBipkg\fP utility (based on opkg) is a lightweight package manager used to download and install Synology packages
from local package repositories or ones located in the Internet.
GNU/Linux users already familiar with apt-get, aptitude, pacman, yum, etc. will recognize the similarities.
It also has similarities with NSLU2's Optware, also made for embedded devices. 
\fBipkg\fP add software to a seperate directory (e.g. /opt). 
.PP
\fBipkg\fP attempts to resolve dependencies with packages in the repositories - if this fails, it will report an error,
and abort the installation of that package.
.PP
Missing dependencies with third-party packages are probably available from the source of the package.
To ignore dependency errors, pass the \fB--force-depends\fP flag.
.SH OPTIONS
Package Commands:
.RS
.TP
.B
update
Update list of available packages
.TP
.B
upgrade
Upgrade installed packages
.TP
.B
install <pkgs>
Install \fBpackage\fP(s)
.TP
.B
configure <pkgs>
Configure unpacked \fBpackage\fP(s)
.TP
.B
remove <pkgs|glob>
Remove \fBpackage\fP(s)
.TP
.B
flag <flag> <pkgs>
Flag \fBpackage\fP(s)
<flag>=hold|noprune|user|ok|installed|unpacked (one per invocation)
.RE
.PP
Informational Commands:
.RS
.TP
.B
list
List available packages
.TP
.B
list-installed
List installed packages
.TP
.B
list-upgradable
List installed and upgradable packages
.TP
.B
list-changed-conffiles
List user modified configuration files
.TP
.B
files <pkg>
List files belonging to <pkg>
.TP
.B
search <file|glob>
List package providing <file>
.TP
.B
find <regexp>
List packages whose name or description matches <regexp>
.TP
.B
info [pkg|glob]
Display all info for <pkg>
.TP
.B
status [pkg|glob]
Display all status for <pkg>
.TP
.B
download <pkg>
Download <pkg> to current directory
compare-versions <v1> <op> <v2>
compare versions using <= < > >= = << >>
.TP
.B
print-architecture
List installable package architectures
depends [\fB-A\fP] [pkgname|glob]+
whatdepends [\fB-A\fP] [pkgname|glob]+
whatdependsrec [\fB-A\fP] [pkgname|glob]+
whatrecommends[\fB-A\fP] [pkgname|glob]+
whatsuggests[\fB-A\fP] [pkgname|glob]+
whatprovides [\fB-A\fP] [pkgname|glob]+
whatconflicts [\fB-A\fP] [pkgname|glob]+
whatreplaces [\fB-A\fP] [pkgname|glob]+
.RE
.RE
.PP
Options:
.RS
.TP
.B
\fB-A\fP
Query all packages not just those installed
.TP
.B
\fB-V\fP[<level>]
Set verbosity level to <level>.
.TP
.B
\fB--verbosity\fP[=<level>]
Verbosity levels:
0 errors only
1 normal messages (default)
2 informative messages
3 debug
4 debug level 2
.TP
.B
\fB-f\fP <conf_file>
Use <conf_file> as the \fBipkg\fP configuration file
\fB--conf\fP <conf_file>
.TP
.B
\fB--cache\fP <directory>
Use a package cache
.TP
.B
\fB-d\fP <dest_name>
Use <dest_name> as the the root directory for
.TP
.B
\fB--dest\fP <dest_name>
package installation, removal, upgrading.
<dest_name> should be a defined dest name from
the configuration file, (but can also be a
directory name in a pinch).
.TP
.B
\fB-o\fP <dir>
Use <dir> as the root directory for
.TP
.B
\fB--offline-root\fP <dir>
offline installation of packages.
.TP
.B
\fB--add-arch\fP <arch>:<prio>
Register architecture with given priority
.TP
.B
\fB--add-dest\fP <name>:<path>
Register destination with given path
.TP
.B
\fB--prefer-arch-to-version\fP
Use the architecture priority package rather
than the higher version one if more
than one candidate is found.
.TP
.B
\fB--combine\fP
Combine upgrade and install operations, this
may be needed to resolve dependency issues.
.RE
.PP
Force Options:
.RS
.TP
.B
\fB--force-depends\fP
Install/remove despite failed dependencies
.TP
.B
\fB--force-maintainer\fP
Overwrite preexisting config files
.TP
.B
\fB--force-reinstall\fP
Reinstall \fBpackage\fP(s)
.TP
.B
\fB--force-overwrite\fP
Overwrite files from other \fBpackage\fP(s)
.TP
.B
\fB--force-downgrade\fP
Allow \fBipkg\fP to downgrade packages
.TP
.B
\fB--force-space\fP
Disable free space checks
.TP
.B
\fB--force-postinstall\fP
Run postinstall scripts even in offline mode
.TP
.B
\fB--force-remove\fP
Remove package even if prerm script fails
.TP
.B
\fB--force-checksum\fP
Don't fail on checksum mismatches
.TP
.B
\fB--noaction\fP
No action -- test only
.TP
.B
\fB--download-only\fP
No action -- download only
.TP
.B
\fB--nodeps\fP
Do not follow dependencies
.TP
.B
\fB--nocase\fP
Perform case insensitive pattern matching
.TP
.B
\fB--size\fP
Print package size when listing available packages
.TP
.B
\fB--installed-size\fP
Print package size after unpacking when listing available
packages. Size after configuring can be different
\fB--force-removal-of-dependent-packages\fP
Remove package and all dependencies
.TP
.B
\fB--autoremove\fP
Remove packages that were installed
automatically to satisfy dependencies
.TP
.B
\fB-t\fP
Specify tmp-dir.
.TP
.B
\fB--tmp-dir\fP
Specify tmp-dir.
.RE
.PP
glob could be something like 'pkgname*' '*file*' or similar
e.g. \fBipkg\fP info 'libstd*' or
\fBipkg\fP search '*libop*' or \fBipkg\fP remove 'libncur*'
.SH EXAMPLES
List all installed packages:
.PP
.nf
.fam C
    $ ipkg list-installed

.fam T
.fi
Search for packages containing perl in name or description:
.PP
.nf
.fam C
        $ ipkg list | grep perl
        $ ipkg find 'perl*'

.fam T
.fi
Install one or more packages including dependencies
.PP
.nf
.fam C
    $ ipkg install man man-pages
.fam T
.fi
.SH AUTHOR
gnadelwartz https://github.com/gnadelwartz/synomin
